@using NanolekPrototype.EntityModels.Enums
@model NanolekPrototype.EntityModels.Models.FormAssignmentForMarkingThermalTransferLabelOnCorrugatedBox

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>FormAssignmentForMarkingThermalTransferLabelOnCorrugatedBox</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.GTIN)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.GTIN)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Series)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Series)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DateOfManufacture)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DateOfManufacture)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.SellBy)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.SellBy)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PacksInCorrugatedBox)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PacksInCorrugatedBox)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.InternalCode)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.InternalCode)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.TaskGiven)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.TaskGiven.FullName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.TaskGivenDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.TaskGivenDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.TaskGot)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.TaskGot.FullName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.TaskGotDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.TaskGotDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Status)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Note)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Note)
        </dd>
    </dl>
</div>
<div>
@if (Model.PackagingProtocol.PackagingProtocolStatus == PackagingProtocolStatus.InWork)
{
    <a asp-action="Edit" asp-route-id="@Model.Id">Редактировать</a> 
}
    <a asp-controller="PackagingProtocols" asp-action="Details" asp-route-id="@Model.PackagingProtocol.Id">Назад</a>
</div>
