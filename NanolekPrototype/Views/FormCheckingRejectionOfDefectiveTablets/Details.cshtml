@using NanolekPrototype.EntityModels.Enums
@model NanolekPrototype.EntityModels.Models.FormCheckingRejectionOfDefectiveTablet

@{
    ViewData["Title"] = "Details";
}

<div class="header-and-back-button">
    <h1>@Html.DisplayFor(model => model.Type)</h1>
    <a class="btn nav-back-button" asp-controller="PackagingProtocols" asp-action="Details" asp-route-id="@Model.PackagingProtocol.Id">Вернуться назад</a>
</div>

<label class="font-weight-bold table-label">Информация о форме протокола</label>
<div class="main-table">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.CheckingDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Note)
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    @Html.DisplayFor(model => model.CheckingDate)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Status)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Note)
                </td>
            </tr>
        </tbody>
    </table>
</div>

<br>

<label class="font-weight-bold">Действия по проверке</label>
<div class="main-table">
    <table class="table">
        <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.VerificationActions.First().Action)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VerificationActions.First().IsApproved)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VerificationActions.First().TaskMaster)
            </th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.VerificationActions)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Action)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsApproved)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TaskMaster.FullName)
                </td>
                <td>
                    @if (Model.PackagingProtocol.PackagingProtocolStatus == PackagingProtocolStatus.InWork)
                    {
                        <a asp-controller="TableVerificationActions" asp-action="Edit" asp-route-id="@item.Id">Редактировать</a>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

<div class="edit-btn-div">
    @if (Model.PackagingProtocol.PackagingProtocolStatus == PackagingProtocolStatus.InWork)
    {
        <a class="btn btn-primary" asp-action="Edit" asp-route-id="@Model.Id">Редактировать</a>
    }
</div>
