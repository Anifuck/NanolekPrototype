@using NanolekPrototype.EntityModels.Enums
@model NanolekPrototype.EntityModels.Models.FormControlOfPrimaryPackaging

@{
    ViewData["Title"] = "Details";
}

<div class="header-and-back-button">
    <h1>@Html.DisplayFor(model => model.Type)</h1>
    <a class="btn nav-back-button" a asp-controller="PackagingProtocols" asp-action="Details" asp-route-id="@Model.PackagingProtocol.Id">Вернуться назад</a>
</div>

<hr />

<label class="font-weight-bold table-label">Информация о форме протокола</label>
<div class="main-table">
    <table class="table">
        <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Note)
            </th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>
                @Html.DisplayFor(model => model.Status)
            </td>
            <td>
                @Html.DisplayFor(model => model.Note)
            </td>
        </tr>
        </tbody>
    </table>
</div>

<br>

<label class="font-weight-bold">Контроль упаковки</label>
<div class="main-table">
    <table class="table">
        <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.PackagingControls.First().Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PackagingControls.First().IsFoilCorrespondenceToSpecification)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PackagingControls.First().IsAppereanceWithoutDefects)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PackagingControls.First().IsClarityMarkAndCorrugationPattern)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PackagingControls.First().IsMatchingVariableData)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PackagingControls.First().IsBulkProductWithoutVisibleDamage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PackagingControls.First().IsCorrespondsCountOfTabletsInBlister)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PackagingControls.First().ActualTemperatureOfCellFormingMin)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PackagingControls.First().ActualTemperatureOfCellFormingMax)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PackagingControls.First().ActualTemperatureOfBlisterAdhesion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PackagingControls.First().BlisteringSpeed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PackagingControls.First().TaskMaster)
            </th>
            <th>
                @if (Model.PackagingProtocol.PackagingProtocolStatus == PackagingProtocolStatus.InWork)
                {
                    <a asp-controller="TablePackagingControls" asp-action="Create" asp-route-formid="@Model.Id">Добавить</a>
                }
            </th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.PackagingControls)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsFoilCorrespondenceToSpecification)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsAppereanceWithoutDefects)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsClarityMarkAndCorrugationPattern)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsMatchingVariableData)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsBulkProductWithoutVisibleDamage)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsCorrespondsCountOfTabletsInBlister)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ActualTemperatureOfCellFormingMin)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ActualTemperatureOfCellFormingMax)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ActualTemperatureOfBlisterAdhesion)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BlisteringSpeed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TaskMaster.FullName)
                </td>
                <td>
                    @if (Model.PackagingProtocol.PackagingProtocolStatus == PackagingProtocolStatus.InWork)
                    {
                        <a asp-controller="TablePackagingControls" asp-action="Edit" asp-route-id="@item.Id">Редактировать</a>
                        <a asp-controller="TablePackagingControls" asp-action="Delete" asp-route-id="@item.Id">Удалить</a>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>
