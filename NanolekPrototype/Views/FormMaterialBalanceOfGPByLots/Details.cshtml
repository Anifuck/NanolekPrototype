@using NanolekPrototype.EntityModels.Enums
@model NanolekPrototype.EntityModels.Models.FormMaterialBalanceOfGPByLot

@{
    ViewData["Title"] = "Details";
}

<div class="header-and-back-button">
    <h1>@Html.DisplayFor(model => model.Type)</h1>
    <a class="btn nav-back-button" asp-controller="PackagingProtocols" asp-action="Details" asp-route-id="@Model.PackagingProtocol.Id">Вернуться назад</a>
</div>

<label class="font-weight-bold table-label">Информация о форме протокола</label>
<div class="scroll-table">
    <table class="table">
        <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.StartDateOfPacking)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FinishDateOfPacking)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShiftMaster)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShiftMasterDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CalcedByUser)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CalcedByUserDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CheckedByUser)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CheckedByUserDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CheckedPUByUser)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CheckedPUByUserDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PackagesCount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ExitAccordingToTheRegulations)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsCompliant)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Observations)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TaskMaster)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Note)
            </th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>
                @Html.DisplayFor(model => model.StartDateOfPacking)
            </td>
            <td>
                @Html.DisplayFor(model => model.FinishDateOfPacking)
            </td>
            <td>
                @Html.DisplayFor(model => model.ShiftMaster.FullName)
            </td>
            <td>
                @Html.DisplayFor(model => model.ShiftMasterDate)
            </td>
            <td>
                @Html.DisplayFor(model => model.CalcedByUser.FullName)
            </td>
            <td>
                @Html.DisplayFor(model => model.CalcedByUserDate)
            </td>
            <td>
                @Html.DisplayFor(model => model.CheckedByUser.FullName)
            </td>
            <td>
                @Html.DisplayFor(model => model.CheckedByUserDate)
            </td>
            <td>
                @Html.DisplayFor(model => model.CheckedPUByUser.FullName)
            </td>
            <td>
                @Html.DisplayFor(model => model.CheckedPUByUserDate)
            </td>
            <td>
                @Html.DisplayFor(model => model.PackagesCount)
            </td>
            <td>
                @Html.DisplayFor(model => model.ExitAccordingToTheRegulations)
            </td>
            <td>
                @Html.DisplayFor(model => model.IsCompliant)
            </td>
            <td>
                @Html.DisplayFor(model => model.Observations)
            </td>
            <td>
                @Html.DisplayFor(model => model.TaskMaster.FullName)
            </td>
            <td>
                @Html.DisplayFor(model => model.Date)
            </td>
            <td>
                @Html.DisplayFor(model => model.Status)
            </td>
            <td>
                @Html.DisplayFor(model => model.Note)
            </td>
        </tr>
        </tbody>
    </table>
</div>

<div class="edit-btn-div">
    @if (Model.PackagingProtocol.PackagingProtocolStatus == PackagingProtocolStatus.InWork)
    {
        <a class="btn btn-primary" asp-action="Edit" asp-route-id="@Model.Id">Редактировать</a>
        <div style="padding-right: 10px;"></div>
        <a class="modalSeaVision btn btn-primary" asp-action="LoadFromSeaVision" asp-route-id="@Model.Id">Загрузить из Sea Vision</a> 
    }
</div>

<div id="modDialog" class="modal fade" >
    <div id="dialogContent" class="modal-dialog"></div>
</div>