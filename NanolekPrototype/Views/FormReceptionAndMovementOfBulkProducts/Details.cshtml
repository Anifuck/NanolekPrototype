@using NanolekPrototype.EntityModels.Enums
@model NanolekPrototype.EntityModels.Models.FormReceptionAndMovementOfBulkProduct

@{
    ViewData["Title"] = "Details";
}

<div class="header-and-back-button">
    <h1>@Html.DisplayFor(model => model.Type)</h1>
    <a class="btn nav-back-button" asp-controller="PackagingProtocols" asp-action="Details" asp-route-id="@Model.PackagingProtocol.Id">Вернуться назад</a>
</div>

<div>
    <label class="font-weight-bold table-label">Информация о форме протокола</label>
    <div class="main-table">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.InternalCodeOfMaterial)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Specification)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CalcedByUser)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CalcedByUserDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CheckedByUser)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CheckedByUserDate)
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        @Html.DisplayFor(model => model.InternalCodeOfMaterial)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.Specification)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.CalcedByUser.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.CalcedByUserDate)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.CheckedByUser.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.CheckedByUserDate)
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <label class="font-weight-bold table-label">Приём балк-продукта (таблеток нерасфасованных)</label>
    <div class="main-table">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Date)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.GetPRP)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PartSAP)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.IsCorrespondToControlIndicators)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.IsCorrespondToShelfLife)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ShiftMaster)
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        @Html.DisplayFor(model => model.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.GetPRP)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.PartSAP)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.IsCorrespondToControlIndicators)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.IsCorrespondToShelfLife)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.ShiftMaster.FullName)
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <label class="font-weight-bold table-label">Баланс по окончании серии</label>
    <div class="main-table">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.EntredIntoGPPackages)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EntredIntoGPUnits)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.GarbageUnits)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DefectFirstPackageUnits)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SampleSelectionUnits)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.GarbageSecondPackageUnits)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Status)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Note)
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        @Html.DisplayFor(model => model.EntredIntoGPPackages)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.EntredIntoGPUnits)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.GarbageUnits)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.DefectFirstPackageUnits)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.SampleSelectionUnits)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.GarbageSecondPackageUnits)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.Note)
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<br>

<label class="font-weight-bold">Движение балк-продукта (таблеток нерасфасованных)</label>
<div class="main-table">
<table class="table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.MovementOfBulkProducts.First().Executor)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MovementOfBulkProducts.First().GarbageKg)
        </th>
        <th>
        @if (Model.PackagingProtocol.PackagingProtocolStatus == PackagingProtocolStatus.InWork)
        {
            <a asp-controller="TableMovementOfBulkProducts" asp-action="Create" asp-route-formid="@Model.Id">Добавить</a>
        }
        </th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.MovementOfBulkProducts) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Executor.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GarbageKg)
            </td>
            <td>
            @if (Model.PackagingProtocol.PackagingProtocolStatus == PackagingProtocolStatus.InWork)
            {
                <a asp-controller="TableMovementOfBulkProducts" asp-action="Edit" asp-route-id="@item.Id">Редактировать</a> 
                <a asp-controller="TableMovementOfBulkProducts" asp-action="Delete" asp-route-id="@item.Id">Удалить</a>
                }
            </td>
        </tr>
    }
    </tbody>
</table>
</div>

<div class="edit-btn-div">
@if (Model.PackagingProtocol.PackagingProtocolStatus == PackagingProtocolStatus.InWork)
{
    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@Model.Id">Редактировать</a>
}
</div>
