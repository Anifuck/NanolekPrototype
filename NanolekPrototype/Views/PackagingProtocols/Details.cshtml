@using NanolekPrototype.EntityModels.Enums
@using NanolekPrototype.EntityModels.Models
@model NanolekPrototype.EntityModels.Models.PackagingProtocol
@{
    ViewData["Title"] = "Details";
    var packagingProtocolForms = ViewData["PackagingProtocolForms"] as List<PackagingProtocolForm>;
}

<div class="header-and-back-button">
    <h1>Протокол упаковки</h1>
    <a class="btn nav-back-button" asp-action="Index">Вернуться назад</a>
</div>


<div>
    <label class="font-weight-bold table-label">Информация о протоколе</label>
    <div class="main-table">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.SerialNumber)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.StorageConditions)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ShelfLife)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ManufacturingDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SellBy)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PackageNumber)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.TradeName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SpecificationGP)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.InternalCodeGP)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PackagingProtocolStatus)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CancellationReason)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ResponsibleUserOOK)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ResponsibleUserTLF)
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        @Html.DisplayFor(model => model.SerialNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.StorageConditions)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.ShelfLife)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.ManufacturingDate)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.SellBy)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.PackageNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.TradeName)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.SpecificationGP)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.InternalCodeGP)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.PackagingProtocolStatus)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.CancellationReason)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.ResponsibleUserOOK.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.ResponsibleUserTLF.FullName)
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

    </br>

<label class="font-weight-bold table-label">Персонал, задействованный в производстве</label>
<div class="main-table">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ProductionPersonnels.First().FullName.FullName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProductionPersonnels.First().FullName.Position)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProductionPersonnels.First().Step)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProductionPersonnels.First().Role)
                </th>
                <th>
                    @if (Model.PackagingProtocolStatus == PackagingProtocolStatus.InWork)
                    {
                        <a asp-controller="TableProductionPersonnels" asp-action="Create" asp-route-protocolid="@Model.Id">Добавить</a>
                    }
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ProductionPersonnels)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FullName.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Position)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Step)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Role)
                    </td>

                    <td>
                        @if (Model.PackagingProtocolStatus == PackagingProtocolStatus.InWork)
                        {
                            <a asp-controller="TableProductionPersonnels" asp-action="Edit" asp-route-id="@item.Id" asp-route-protocolid="@Model.Id">Редактировать</a>

                            <a asp-controller="TableProductionPersonnels" asp-action="Delete" asp-route-id="@item.Id" asp-route-protocolid="Model.Id">Удалить</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

</br>

<label class="font-weight-bold table-label">Протоколы допуска персонала к работе</label>
<div class="main-table">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.PersonnelAccessProtocols.First().ProtocolNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PersonnelAccessProtocols.First().ProtocolDate)
                </th>
                <th>
                    @if (Model.PackagingProtocolStatus == PackagingProtocolStatus.InWork)
                    {
                        <a asp-controller="TablePersonnelAccessProtocols" asp-action="Create" asp-route-protocolid="@Model.Id">Добавить</a>
                    }
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.PersonnelAccessProtocols)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProtocolNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProtocolDate)
                    </td>
                    <td>
                        @if (Model.PackagingProtocolStatus == PackagingProtocolStatus.InWork)
                        {
                            <a asp-controller="TablePersonnelAccessProtocols" asp-action="Edit" asp-route-id="@item.Id" asp-route-protocolid="@Model.Id">Редактировать</a>
                            <a asp-controller="TablePersonnelAccessProtocols" asp-action="Delete" asp-route-id="@item.Id" asp-route-protocolid="@Model.Id">Удалить</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

</br>

<div class="main-table">
    <table class="table">
        <thead>
            <tr>
                <th>
                    Формы протокола упаковки
                </th>
                <th>
                    Статус
                </th>
                <th>
                    Действия
                </th>
            </tr>
        </thead>
        <tbody>
            @{int c = 0;}
            @foreach (var item in packagingProtocolForms)
            {
                c++;
                var url = "Form" + @item.Type.ToString("G") + "s";
                <tr>
                    <td>
                        <a href="/@url/Details/@item.Id">@Html.DisplayFor(modelItem => item.Type)</a>
                    </td>
                    <td>
                        <div id="@item.Type.ToString()">
                            @Html.DisplayFor(modelItem => item.Status)
                        </div>
                    </td>
                    <td>
                        @if (Model.PackagingProtocolStatus == PackagingProtocolStatus.InWork)
                        {
                            @if (User.IsInRole("controller") && @item.Status == FormStatus.OnControl)
                            {
                                <button class="btn btn-primary" id="onApproveButton_@c.ToString()" onclick="SendOnApprove(@item.Id, '@item.Type.ToString()', this.id);">Утвердить</button>
                                <a class="btn btn-primary" id="onRevisionButton_@c.ToString()" href="/@url/SendOnRevisionForm/@item.Id">На доработку</a>
                            }
                            @if (User.IsInRole("executor") && (@item.Status == FormStatus.InWork || @item.Status == FormStatus.OnCompletion))
                            {
                                <button class="btn btn-primary" id="onControlButton_@c.ToString()" onclick="SendOnControl(@item.Id, '@item.Type.ToString()', this.id);">На проверку</button>
                            }
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


<div class="popup-fade">
    <div id="popup">
        <div class="modal-content">
            <div class="modal-header">
                <h4>Введите пароль</h4>
            </div>
            <input type="hidden" id="controllerName" value="">
            <input type="hidden" id="elementId" value="">
            <input type="hidden" id="formId" value="">
            <input type="hidden" id="url" value="">
            <div class="modal-body">
                <dl class="dl-horizontal">
                    <dt>Пароль</dt>
                    <dd><input type="text" id="passwordText" value="" /></dd>

                    <dt>Причина</dt>
                    <dd><input type="text" id="cause" value="" /></dd>
                </dl>
                <button class="btn btn-primary" type="submit" value="OK" onclick="CheckPassword()">ОК</button>
                <button class="btn btn-warning" value="Cancel" onclick="PopUpHide()">Отменить</button>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-2.0.2.min.js"></script>
<script>
    $(document).ready(function () {
        PopUpHide();
        $(".popup-fade").css("display", "none");
    });
</script>
